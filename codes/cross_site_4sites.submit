# The environment
universe       = vanilla
getenv         = True

# resources
request_cpus   = 10
request_memory = 5G


# Execution
initial_dir    = .
executable     = $(initial_dir)/run_in_venv.sh
transfer_executable = False

#Logs
log            = $(initial_dir)/../logs/$(result_prefix).$(model).$(Cluster).$(Process).log
output         = $(initial_dir)/../logs/$(result_prefix).$(model).$(Cluster).$(Process).out
error          = $(initial_dir)/../logs/$(result_prefix).$(model).$(Cluster).$(Process).err


# --models: 'ridge', 'rf', 'rvr_lin', 'kernel_ridge', 'gauss', 'lasso', 'elasticnet', 'rvr_poly', 'xgb'
# --pca_status: 0 or 1


data_name = ixi_camcan_enki_1000brains
subject_filepaths_csv = ixi_camcan_enki_1000brains.subject_list_cat12.8.csv

arguments = test_package_env python3 cross_site_train.py --demographics_file ../data/$(data_name)/$(subject_filepaths_csv) --features_file ../data/$(data_name)/$(feature_name) --output_path ../results/$(data_name) --output_prefix $(result_prefix) --models $(model) --pca_status $(pca)


########## S4_R4_pca
feature_name = $(data_name).S4_R4
result_prefix = $(data_name).S4_R4_pca
pca = 1

#model = ridge
#queue

#model = rf
#queue

#model = rvr_lin
#queue

#model = kernel_ridge
#queue

#model = gauss
#queue

#model = lasso
#queue

#model = elasticnet
#queue

#model = rvr_poly
#queue

#model = xgb
#queue


########## 173
feature_name = $(data_name).173
result_prefix = $(data_name).173
pca = 0

model = rvr_lin
queue







