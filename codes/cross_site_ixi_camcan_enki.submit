# The environment
universe       = vanilla
getenv         = True

# resources
request_cpus   = 5
request_memory = 10G


# Execution
initial_dir    = .
executable     = $(initial_dir)/run_in_venv.sh
transfer_executable = False

# Logs
#log            = $(initial_dir)/../logs/$(Cluster).$(Process).log
#output         = $(initial_dir)/../logs/$(Cluster).$(Process).out
#error          = $(initial_dir)/logs/$(Cluster).$(Process).err

log            = $(initial_dir)/../logs/$(result).$(model).$(Cluster).$(Process).log
output         = $(initial_dir)/../logs/$(result).$(model).$(Cluster).$(Process).out
error          = $(initial_dir)/../logs/$(result).$(model).$(Cluster).$(Process).err

# --models: 'ridge', 'rf', 'rvr_lin', 'kernel_ridge', 'gauss', 'lasso', 'elasticnet', 'rvr_poly', 'xgb'
# --pca_status: 0 or 1


arguments = test_package_env python3 cross_site_train.py --data_path $(data_dir)/$(data) --output_path $(results_dir)/$(result) --models $(model) --confounds None --pca_status $(pca) --n_jobs 5


data_dir = ../data/ixi_camcan_enki
results_dir = ../results/ixi_camcan_enki


########## 173
data = ixi_camcan_enki_173
pca = 0

#model = gauss
#queue

#model = rf
#queue

#model = lasso
#queue

model = rvr_lin
queue


data_dir = ../data/ixi_camcan_enki_1000brains
results_dir = ../results/ixi_camcan_enki_1000brains


########## 173
data = ixi_camcan_enki_1000brains_173
pca = 0

#model = gauss
#queue

#model = rf
#queue

#model = lasso
#queue

model = rvr_lin
queue








